//
//  PHAppStartManager.m
//  PocketHealth
//
//  Created by macmini on 15-1-5.
//  Copyright (c) 2015å¹´ YiLiao. All rights reserved.
//

#import "PHAppStartManager.h"
#import "CommonUtil.h"
#import "AppDelegate.h"

#import "PHLoginViewController.h"
#import "PHMonitoringViewController.h"
static PHAppStartManager *appStartManager;
@implementation PHAppStartManager
+(id)defaultManager
{
    if (appStartManager == nil) {
        appStartManager = [[PHAppStartManager alloc] init];
    }
    return appStartManager;
}

-(Member *)userHost
{
    return host;
}

-(void)setHostMember:(Member *)member
{
    host = member;
}

-(void)startApp
{
    NSString *loginName = [CommonUtil localUserDefaultsForKey:kMY_USER_LoginName];
    NSString *password = [CommonUtil localUserDefaultsForKey:kMY_USER_PASSWORD];
//    NSString *pushUserId = [CommonUtil localUserDefaultsForKey:KMY_PUSH_USERID];
//    NSString *pushChannelId = [CommonUtil localUserDefaultsForKey:KMY_PUSH_CHANNELID];
    NSString *pushUserId = @"aaa";
    NSString *pushChannelId = @"bbb";

    if (loginName && password && pushUserId && pushChannelId){
        shouldAutoLogin = YES;
        [self setHomeView];
    }else{
        shouldAutoLogin = NO;
        [self setLoginView];
    }
}

-(void)setHomeView
{
    _tabBarController = [[UITabBarController alloc] init];
    [_tabBarController.navigationItem setHidesBackButton:YES];
    PHMonitoringViewController *phMonitoringVC = [[PHMonitoringViewController alloc] init];
    _tabBarController.viewControllers = @[phMonitoringVC];
    _navigationController = [[UINavigationController alloc] initWithRootViewController:_tabBarController];
    [[(AppDelegate *)[UIApplication sharedApplication].delegate window] setRootViewController:_navigationController];
}

-(void)pushHomeView
{
    _tabBarController = [[UITabBarController alloc] init];
    [_tabBarController.navigationItem setHidesBackButton:YES];
    PHMonitoringViewController *phMonitoringVC = [[PHMonitoringViewController alloc] init];
    _tabBarController.viewControllers = @[phMonitoringVC];
    [_navigationController pushViewController:_tabBarController animated:YES];
}

-(void)setLoginView
{
    PHLoginViewController *phLoginVC = [[PHLoginViewController alloc] init];
    _navigationController = [[UINavigationController alloc] initWithRootViewController:phLoginVC];
    [[(AppDelegate *)[UIApplication sharedApplication].delegate window] setRootViewController:_navigationController];
}

-(void)loginOut
{
    [_navigationController popToRootViewControllerAnimated:NO];
    _navigationController = nil;
    _tabBarController = nil;
    shouldAutoLogin = NO;
    [self setLoginView];
}

-(BOOL)shouldAutoLogin
{
    return shouldAutoLogin;
}
@end
