//
//  PHUserCenterHeadViewController.m
//  PocketHealth
//
//  Created by YangFan on 15/1/8.
//  Copyright (c) 2015å¹´ YiLiao. All rights reserved.
//

#import "PHUserCenterHeadViewController.h"
#import "PHAppStartManager.h"
#import "PHGetMemberInfoManager.h"
#import "UIImageView+WebCache.h"
#import "GlobalVar.h"
#import "CommonUtil.h"

@interface PHUserCenterHeadViewController ()
{
    Member *host;
}
@property (strong, nonatomic) IBOutlet UIButton *friendListBtn;
@property (strong, nonatomic) IBOutlet UIButton *doctorListBtn;
@property (strong, nonatomic) IBOutlet UIButton *organizationBtn;
@property (strong, nonatomic) IBOutlet UIButton *headLogoBtn;
@property (strong, nonatomic) IBOutlet UILabel *lblFriendCount;
@property (strong, nonatomic) IBOutlet UILabel *lblDoctorCount;
@property (strong, nonatomic) IBOutlet UILabel *lblOrganizationCount;
@property (strong, nonatomic) IBOutlet UIImageView *imgHeadImage;

@end

@implementation PHUserCenterHeadViewController
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    [self updateView];
    host = [[PHAppStartManager defaultManager] userHost];
    [self updateUIViewContent];
}

-(void)updateView
{
    
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)updateUIViewContent
{
//    host = [[PHAppStartManager defaultManager] userHost];
//    [_imgHeadImage setImageWithURL:[NSURL URLWithString:host.headImage] placeholderImage:[UIImage imageNamed:DefaultUserHeadImage]];
    [self getUserInfo];
}

-(void)getUserInfo
{
    [[PHGetMemberInfoManager defaultManager] requestMemberInfo:host.memberId done:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSDictionary *dic = (NSDictionary *)responseObject;
        NSInteger code = [[dic objectForKey:@"Code"] integerValue];
        if (code == 1) {
            NSDictionary *resultDic = [dic objectForKey:@"Result"];
            NSError *error = nil;
            Member *hostMember = [MTLJSONAdapter modelOfClass:[Member class] fromJSONDictionary:resultDic error:&error];
            if (!error) {
                [[PHAppStartManager defaultManager] setHostMember:hostMember];
                [self setUIValueWithHost:hostMember];
            }
        }else{
            Member *hostMember = [[PHAppStartManager defaultManager] userHost];
            [self setUIValueWithHost:hostMember];
        }
    } error:^(AFHTTPRequestOperation *operation, NSError *error) {
        Member *hostMember = [[PHAppStartManager defaultManager] userHost];
        [self setUIValueWithHost:hostMember];
    }];
}

-(void)setUIValueWithHost:(Member *)hostMember
{
    _lblFriendCount.text = [NSString stringWithFormat:@"%ld",(long)hostMember.friendCount];
    _lblDoctorCount.text = [NSString stringWithFormat:@"%ld",(long)hostMember.doctorCount];
    _lblOrganizationCount.text = [NSString stringWithFormat:@"%ld",(long)hostMember.organizaitonCount];
    _userNameLabel.text = hostMember.nickName;
    [_imgHeadImage sd_setImageWithURL:[NSURL URLWithString:hostMember.headImage] placeholderImage:[UIImage imageNamed:DefaultUserHeadImage]];
}

- (IBAction)friendListBtnClick:(id)sender {
    if ([self.delegate respondsToSelector:@selector(friendBtnClick)]) {
        [self.delegate friendBtnClick];
    }
}

- (IBAction)doctorListBtnClick:(id)sender {
    if ([self.delegate respondsToSelector:@selector(doctorBtnClick)]) {
        [self.delegate doctorBtnClick];
    }
}

- (IBAction)clickOrganizationBtn:(id)sender {
    if ([self.delegate respondsToSelector:@selector(organizaitonBtnClick)]) {
        [self.delegate organizaitonBtnClick];
    }
}


- (IBAction)userHeadBtnClick:(id)sender {
    if ([self.delegate respondsToSelector:@selector(userHeadBtnClick)]) {
        [self.delegate userHeadBtnClick];
    }
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
