//
//  PrivateChatTableViewController.m
//  PocketHealth
//
//  Created by YangFan on 15/1/8.
//  Copyright (c) 2015年 YiLiao. All rights reserved.
//

#import "PrivateChatTableViewController.h"
#import "MessageCell.h"
#import "MessageFrame.h"

#import "SOneForOneMessageDB.h"
#import "SFirendDB.h"
#import "VoiceConverter.h"
#import "ChatCacheFileUtil.h"
#import "VoicePlayDevice.h"

#import "CalculateViewFrame.h"
#import "GlobalVar.h"


#define CONNECT_TIMEOUT 15.0
#define WRITE_TIMEOUT 10.0
#define SHOWMSGBETWEENTIME 120.0

@interface PrivateChatTableViewController ()<UITableViewDataSource, UITableViewDelegate>
{
    NSMutableArray  *_allMessagesFrame;
}
@end

@implementation PrivateChatTableViewController
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(id)initWithMember:(Member *)member WithHostMember:(Member *)host;
{
    self = [super init];
    if (self) {
        _chatToMember = member;
        _hostMember = host;
        _isCurrentPresentView = NO;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.navigationItem.title = _chatToMember.nickName;
    //[self.navigationController.navigationBar setTranslucent:YES];
    CGFloat inputViewHeight;
    
    if ([[[UIDevice currentDevice]systemVersion]floatValue]>=7) {
        inputViewHeight = 45.0f;
    }
    else{
        inputViewHeight = 40.0f;
    }
    
    self.tableView = [[UITableView alloc] init];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    CGRect frame = [CalculateViewFrame viewFrame:self.navigationController withTabBarController:self.tabBarController];
    self.tableView.frame = CGRectMake(0, 0, self.view.frame.size.width, frame.size.height-inputViewHeight);
    
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView.allowsSelection = NO;
    [self.view addSubview:self.tableView];
    
    _allMessagesFrame = [[NSMutableArray alloc]init];
    if (_chatToMember.messageArr.count > 0) {
        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
        formatter.dateFormat = @"yyyy-MM-dd HH:mm:ss";
        NSDate *previousTime = [NSDate dateWithTimeIntervalSince1970:0];
        for (OneForOneMessage *m in self.chatToMember.messageArr) {
            MessageFrame *messageFrame = [[MessageFrame alloc] init];
//            NSDate *messageDate = [formatter dateFromString:m.time];
//            NSTimeInterval i = [messageDate timeIntervalSinceDate:previousTime];
            NSTimeInterval i = m.time - previousTime.timeIntervalSinceNow;
            messageFrame.showTime = i>SHOWMSGBETWEENTIME?true:false;
            messageFrame.message = m;
            messageFrame.hostMemberId = _hostMember.memberId;
//            previousTime = m.time;
            [_allMessagesFrame addObject:messageFrame];
        }
        
    }

    
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    //self.tableView.backgroundView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"chat_bg_default.jpg"]];
    self.tableView.backgroundColor = [UIColor groupTableViewBackgroundColor];
    [self notificationSetting];
//    if (self.chatToMember.messageArr.count > 0) {
//        [self TableViewReloadData];
//    }
    _isCurrentPresentView = YES;
    
    SOneForOneMessageDB *msgdb = [[SOneForOneMessageDB alloc] init];
    [msgdb mergeNotReadMessageToReadMessageWithUid:_chatToMember.memberId WithContactUid:_hostMember.memberId];

    _hostMember.messageNotReadCount = _hostMember.messageNotReadCount-_chatToMember.messageNotReadCount;
    _chatToMember.messageNotReadCount = 0;
}

- (void)viewWillDisappear:(BOOL)animated
{
    
    [super viewWillDisappear:animated];
    _isCurrentPresentView = NO;
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    // Checking if we are disappearing because of the back button
    
    if ([self isMovingFromParentViewController])
        
    {
        // In case that back button is pressed, insert your code here
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(void)notificationSetting
{
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(addSendMessageToTableView:) name:@"TABLEVIEWRELOAD" object:nil];
}

-(void)initAudio{
    //    [[UIDevice currentDevice] setProximityMonitoringEnabled:YES]; //建议在播放之前设置yes，播放结束设置NO，这个功能是开启红外感应
    
    //添加监听
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(sensorStateChange:)
                                                 name:@"UIDeviceProximityStateDidChangeNotification"
                                               object:nil];
}

-(void)unInitAudio{
    //    [[UIDevice currentDevice] setProximityMonitoringEnabled:NO]; //建议在播放之前设置yes，播放结束设置NO，这个功能是开启红外感应
    
    //添加监听
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"UIDeviceProximityStateDidChangeNotification" object:nil];
}

//处理监听触发事件
-(void)sensorStateChange:(NSNotificationCenter *)notification;
{
    //如果此时手机靠近面部放在耳朵旁，那么声音将通过听筒输出，并将屏幕变暗（省电啊）
    if ([[UIDevice currentDevice] proximityState] == YES)
    {
        NSLog(@"Device is close to user");
        [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryPlayAndRecord error:nil];
        
    }
    else
    {
        NSLog(@"Device is not close to user");
        [[AVAudioSession sharedInstance] setCategory:AVAudioSessionCategoryPlayback error:nil];
    }
}

#pragma mark 给数据源增加内容
- (void)addMessage:(OneForOneMessage *)msg{
    
    
    
    MessageFrame *mf = [[MessageFrame alloc] init];
    if (_chatToMember.messageArr.count > 0) {
        NSDateFormatter *fmt = [[NSDateFormatter alloc] init];
        fmt.dateFormat = @"yyyy-MM-dd HH:mm:ss";
        OneForOneMessage *previousMsg = [self.chatToMember.messageArr objectAtIndex:self.chatToMember.messageArr.count-1];
//        NSDate *previousTime = [fmt dateFromString:previousMsg.time];
//        NSDate *messageDate = [fmt dateFromString:msg.time];
//        NSTimeInterval i = [messageDate timeIntervalSinceDate:previousTime];
        NSTimeInterval i = msg.time - previousMsg.time;
        mf.showTime = i>SHOWMSGBETWEENTIME?true:false;
    }else
    {
        mf.showTime = true;
    }
    mf.message = msg;
    mf.hostMemberId = _hostMember.memberId;
    
    
    [_chatToMember.messageArr addObject:msg];
    [_allMessagesFrame addObject:mf];
    
    SOneForOneMessageDB *msgdb       = [[SOneForOneMessageDB alloc] init];
//    if ([msg isValidate]) {
        [msgdb saveMessage:msg WithUid:_chatToMember.memberId WithContactUid:self.hostMember.memberId];
        _chatToMember.isSession = 1;
        SFirendDB *frienddb     = [[SFirendDB alloc] init];
        [frienddb mergeWithUser:_chatToMember WithBelongUid:self.hostMember.memberId];
//    }
    //    [msgdb close];
    
    
    
    [self performSelectorOnMainThread:@selector(TableViewReloadData) withObject:nil waitUntilDone:NO];
    
    //当发送消息之后 刷新主聊天界面
    [[NSNotificationCenter defaultCenter]postNotificationName:@"REFRESHHOMECHATVIEWWITHCHATMEMBER" object:_chatToMember];
}
-(void)addSendMessageToTableView:(NSNotification *)notification
{
    NSDictionary *dic = [notification object];
    NSInteger retcode = [[dic valueForKey:@"retcode"] integerValue];
    NSInteger msgsn = [[dic valueForKey:@"msgsn"] integerValue];
    
    if (msgsn < self.chatToMember.messageArr.count) {
        OneForOneMessage *message = [self.chatToMember.messageArr objectAtIndex:msgsn];
        if (message.state == MessageIsSend) {
            if (retcode == 0) {
                message.state = MessageSuccess;
            }else{
                message.state = MessageFailed;
            }
            
            SOneForOneMessageDB *msgdb = [[SOneForOneMessageDB alloc] init];
//            if ([message isValidate]) {
                [msgdb mergeMessage:message WithUid:self.chatToMember.memberId WithContactUid:self.hostMember.memberId];
//            }
            NSLog(@"%ld, %ld",(long)retcode,(long)msgsn);
            [self performSelectorOnMainThread:@selector(TableViewReloadData) withObject:nil waitUntilDone:NO];
        }
    }
}

-(void)TableViewReloadData
{
    [self.tableView reloadData];
    [self tableViewscrollToBottom];
}
-(void)TableViewReloadDataWithoutScrollToBottom{
    [self.tableView reloadData];
}
-(void)tableViewscrollToBottom{
    //滚动至当前行
    if (_allMessagesFrame.count>0) {
        NSIndexPath *indexPath = [NSIndexPath indexPathForRow:_allMessagesFrame.count - 1 inSection:0];
        [self.tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionBottom animated:YES];
    }
    
}
#pragma mark - tableView数据源方法

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _allMessagesFrame.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *CellIdentifier = [NSString stringWithFormat:@"Cell%ld",(long)indexPath.row];
    MessageCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    if (cell == nil) {
        cell = [[MessageCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
        // 设置数据
        cell.messageFrame = _allMessagesFrame[indexPath.row];
        
        OneForOneMessage *message = [_chatToMember.messageArr objectAtIndex:indexPath.row];
        if (message.code == MessageCodeText) {
            if ([message messageContentType] == MessageContentVoice) {
                cell.delegate = self;
                cell.didTouch = @selector(onSelect:);
                cell.index = indexPath.row;
            }
        }
    }
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return [_allMessagesFrame[indexPath.row] cellHeight];
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
}

#pragma mark - 代理方法

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{
    [[NSNotificationCenter defaultCenter] postNotificationName:@"SCROLLDRAGGING" object:nil];
}

-(void)onSelect:(UIView*)sender{
    NSInteger n = sender.tag;
    OneForOneMessage *msg=[self.chatToMember.messageArr objectAtIndex:n];
    
    switch ([msg messageContentType]) {
        case MessageContentVoice:{
            [self recordPlay:msg];
            break;
        }
        default:
            break;
    }
    msg = nil;
}



-(void)initPlayer{
    //初始化播放器的时候如下设置
    UInt32 sessionCategory = kAudioSessionCategory_MediaPlayback;
    AudioSessionSetProperty(kAudioSessionProperty_AudioCategory,
                            sizeof(sessionCategory),
                            &sessionCategory);
    
    UInt32 audioRouteOverride = kAudioSessionOverrideAudioRoute_Speaker;
    AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute,
                             sizeof (audioRouteOverride),
                             &audioRouteOverride);
    
    AVAudioSession *audioSession = [AVAudioSession sharedInstance];
    //默认情况下扬声器播放
    [audioSession setCategory:AVAudioSessionCategoryPlayback error:nil];
    [audioSession setActive:YES error:nil];
    audioSession = nil;
}

-(void)recordPlay:(OneForOneMessage *)msg{
    NSArray *array = [msg.content componentsSeparatedByString:@"|"];
    if ((array != nil) && (array.count == 2)) {
        NSString *amrFullPath = [[NSString alloc]init];
        if (msg.type == MessageTypeMe) {
            amrFullPath = [[[ChatCacheFileUtil sharedInstance] userDocPath] stringByAppendingPathComponent:[NSString stringWithFormat:@"%@",[array objectAtIndex:0]]];
        }
        else if(msg.type == MessageTypeOther){
            NSRange range = [[array objectAtIndex:0] rangeOfString:@"/"];
            NSString *fileName = [[array objectAtIndex:0] substringFromIndex:range.location+range.length];
            amrFullPath = [[[ChatCacheFileUtil sharedInstance] userDocPath] stringByAppendingPathComponent:fileName];
            
            NSFileManager *fileManager=[NSFileManager defaultManager];
            if (![fileManager fileExistsAtPath:amrFullPath]) {
                
                NSString *fileUrl = [NSString stringWithFormat:@"%@/UpLoadFile/%@",ServerBaseURL,[array objectAtIndex:0]];
                NSData *amrData = [NSData dataWithContentsOfURL:[NSURL URLWithString:fileUrl]];
                [amrData writeToFile:amrFullPath atomically:YES];
                
                SOneForOneMessageDB *msgdb = [[SOneForOneMessageDB alloc] init];
                msg.readState = MessageRead;
                [msgdb mergeMessage:msg WithUid:self.chatToMember.memberId WithContactUid:self.hostMember.memberId];

            }
        }
        //[msg.fileData writeToFile:fullPath atomically:YES];
        NSString *wavPath = [VoiceConverter amrToWav:amrFullPath];
        //        NSError *error=nil;
        //        [audioPlayer stop];
        audioPlayer = [VoicePlayDevice shareInstanceWithFilePath:wavPath];
        
        //        [self initPlayer];
        //        audioPlayer = [[AVAudioPlayer alloc] initWithData:[NSData dataWithContentsOfFile:wavPath] error:&error];
        
        [[ChatCacheFileUtil sharedInstance] deleteWithContentPath:wavPath];
        //        if (error) {
        //            error=nil;
        //        }
        [audioPlayer setVolume:1];
        [audioPlayer prepareToPlay];
        [audioPlayer setDelegate:self];
        [audioPlayer play];
        
        [[UIDevice currentDevice] setProximityMonitoringEnabled:YES]; //建议在播放之前设置yes，播放结束设置NO，这个功能是开启红外感应
    }
}

- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)player successfully:(BOOL)flag{
    [[UIDevice currentDevice] setProximityMonitoringEnabled:NO]; //建议在播放之前设置yes，播放结束设置NO，这个功能是开启红外感应
}
-(void)privateChatTableViewReloadData
{
    [self.tableView reloadData];
    [self tableViewscrollToBottom];
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
