//
//  SSleepingDB.m
//  PocketHealth
//
//  Created by YangFan on 15/1/13.
//  Copyright (c) 2015年 YiLiao. All rights reserved.
//

#import "SSleepingDB.h"

#define kSleepingDB @"SleepingDB"

@implementation SSleepingDB

- (id) init {
    self = [super init];
    if (self) {
        //========== 首先查看有没有建立数据库，如果未建立，则建立数据库=========
        _db = [SDBManager defaultDBManager].dataBase;
    }
    return self;
}
-(void)createDataBase{
    FMResultSet * set = [_db executeQuery:[NSString stringWithFormat:@"select count(*) from sqlite_master where type ='table' and name = '%@'",kSleepingDB]];
    
    [set next];
    
    NSInteger count = [set intForColumnIndex:0];
    
    BOOL existTable = !!count;
    
    if (existTable) {
        // TODO:是否更新数据库
        NSLog(@"%@数据库已经存在",kSleepingDB);
    } else {
        // TODO: 插入新的数据库
        NSString * sql = @"CREATE TABLE SleepingDB (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, belongMemberId BIGINT,lastSleepTime TIMESTAMP,wakeupSleepTime TIMESTAMP,belongSleepDate VARCHAR(50),sleepDuration INTEGER,isUpload INTEGER)";
        BOOL res = [_db executeUpdate:sql];
        if (!res) {
            NSLog(@"%@数据库创建失败",kSleepingDB);
        } else {
            NSLog(@"%@数据库创建成功",kSleepingDB);
        }
    }
}
-(BOOL)saveSleeping:(Sleeping *)sleeping{
    NSMutableString * query = [NSMutableString stringWithFormat:@"INSERT INTO SleepingDB"];
    NSMutableString * keys = [NSMutableString stringWithFormat:@" ("];
    NSMutableString * values = [NSMutableString stringWithFormat:@" ( "];
    NSMutableArray * arguments = [NSMutableArray arrayWithCapacity:10];
    
    [keys appendString:@"belongMemberId,"];
    [values appendString:@"?,"];
    [arguments addObject:[NSString stringWithFormat:@"%lld",sleeping.belongMemberId]];
    
    
    
    [keys appendString:@"sleepDuration,"];
    [values appendString:@"?,"];
    [arguments addObject:[NSString stringWithFormat:@"%ld",(long)sleeping.sleepDuration]];
    
    
    
    [keys appendString:@"lastSleepTime,"];
    [values appendString:@"?,"];
    [arguments addObject:[NSString stringWithFormat:@"%f",sleeping.lastSleepTime]];
    

    [keys appendString:@"wakeupSleepTime,"];
    [values appendString:@"?,"];
    [arguments addObject:[NSString stringWithFormat:@"%f",sleeping.wakeupSleepTime]];
    
    [keys appendFormat:@"isUpload,"];
    [values appendString:@"?,"];
    [arguments addObject:[NSString stringWithFormat:@"%ld",(long)sleeping.isUpload]];
    
    //belongSleepDate
    [keys appendFormat:@"belongSleepDate,"];
    [values appendString:@"?,"];
    [arguments addObject:sleeping.belongSleepDate];
    
    [keys appendString:@")"];
    [values appendString:@")"];
    [query appendFormat:@" %@ VALUES%@",
     [keys stringByReplacingOccurrencesOfString:@",)" withString:@")"],
     [values stringByReplacingOccurrencesOfString:@",)" withString:@")"]];
    
    NSLog(@"%@",query);
    
    bool isSaveOk = [_db executeUpdate:query withArgumentsInArray:arguments];
    isSaveOk?NSLog(@"sleeping 插入数据OK"):NSLog(@"sleeping save error");
    return isSaveOk;
}
-(BOOL)mergeSleeping:(Sleeping *)sleeping{
    NSString * query = @"UPDATE SleepingDB SET";
    NSMutableString * temp = [NSMutableString stringWithCapacity:100];
    // xxx = xxx;
    
    
    if (sleeping.lastSleepTime) {
        [temp appendFormat:@" lastSleepTime = '%lf',",sleeping.lastSleepTime];
    }
    if (sleeping.sleepDuration) {
        [temp appendFormat:@" sleepDuration = '%ld',",(long)sleeping.sleepDuration];
    }
    if (sleeping.isUpload) {
        [temp appendFormat:@" isUpload = '%ld',",(long)sleeping.isUpload];
    }
    if (sleeping.wakeupSleepTime) {
        [temp appendFormat:@" wakeupSleepTime = '%f',",sleeping.wakeupSleepTime];
    }
    if (sleeping.belongSleepDate) {
        [temp appendFormat:@" belongSleepDate = '%@',",sleeping.belongSleepDate];
    }
    
    [temp appendString:@")"];
    query = [query stringByAppendingFormat:@"%@ WHERE belongmemberid = '%lld'",[temp stringByReplacingOccurrencesOfString:@",)" withString:@""],sleeping.belongMemberId];
    NSLog(@"%@",query);
    BOOL flag = [_db executeUpdate:query];
    flag ?NSLog(@"sleeping 修改一条数据 成功"): NSLog(@"sleeping 修改一条数据 失败");
    return flag;

}
-(BOOL)isExistSleepingData:(NSTimeInterval)startSleepTime WithBelongId:(long long)belongId{
    NSString * query =[NSString stringWithFormat:@"SELECT * FROM SleepingDB WHERE belongMemberId = '%lld' and lastSleepTime = '%f'",belongId,startSleepTime];
    FMResultSet * rs = [_db executeQuery:query];
    BOOL isExist =  rs.next;
    [rs close];
    return isExist;
}
-(BOOL)mergeSleepingWakeupTimeTo:(NSTimeInterval)wakeupSleepTime WithBelongId:(long long)belongId WithStartSleepTime:(NSTimeInterval)startSleepTime{
    NSString * query = [NSString stringWithFormat:@"UPDATE SleepingDB SET wakeupSleepTime = '%f' WHERE belongMemberId = '%lld' and lastSleepTime = '%f' ",wakeupSleepTime,belongId,startSleepTime];
    NSInteger result = [_db executeUpdate:query];
    NSLog(@"更新了%ld条数据",(long)result);
    return result;
}
-(NSArray *)selectAllUnUploadDate:(long long)hostId{
    NSString * query = [NSString stringWithFormat:@"SELECT * FROM SleepingDB WHERE belongMemberId = '%lld' and isUpload = 0 ORDER BY id DESC",hostId];
    FMResultSet * rs = [_db executeQuery:query];
    NSMutableArray * array = [NSMutableArray arrayWithCapacity:[rs columnCount]];
    while ([rs next]) {
        Sleeping *sleeping = [[Sleeping alloc]init];
        
        sleeping.belongMemberId = hostId;
        sleeping.lastSleepTime = [rs doubleForColumn:@"lastSleepTime"];
        sleeping.wakeupSleepTime = [rs doubleForColumn:@"wakeupSleepTime"];
        sleeping.sleepDuration = [rs intForColumn:@"sleepDuration"];
        sleeping.belongSleepDate = [rs stringForColumn:@"belongSleepDate"];
        
        
        [array addObject:sleeping];
        //        }
    }
    [rs close];
    return array;

}
-(BOOL)mergeUnUploadSleepingToUploaded:(long long)hostId{
    NSString * query = [NSString stringWithFormat:@"UPDATE SleepingDB SET isUpload = 1 WHERE belongMemberId = '%lld' and isUpload = 0",hostId];
    NSInteger result = [_db executeUpdate:query];
    NSLog(@"更新了 sleepDb %ld条数据",(long)result);
    return result;
}
@end
