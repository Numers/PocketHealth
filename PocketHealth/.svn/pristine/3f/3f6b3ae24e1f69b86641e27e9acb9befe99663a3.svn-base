//
//  PHBackViewTopToolBar.m
//  PocketHealth
//
//  Created by macmini on 15-3-16.
//  Copyright (c) 2015å¹´ YiLiao. All rights reserved.
//

#import "PHBackViewTopToolBar.h"
#define ButtonWidthAndHeight 30.0f
#define LabelWidth 50.0f
#define LabelHeight 21.0f
#define AnimateDuration 0.3f

@implementation PHBackViewTopToolBar
-(id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self setTranslucent:YES];
        self.backgroundColor = [UIColor clearColor];
        [self setBackgroundImage:[UIImage new] forToolbarPosition:UIBarPositionAny barMetrics:UIBarMetricsDefault];
        [self setShadowImage:[UIImage new] forToolbarPosition:UIBarPositionAny];
        UIBarButtonItem *leftItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:self action:nil];
        
        lblTime = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, LabelWidth, LabelHeight)];
        [lblTime setText:@"10:03"];
        UIBarButtonItem *centerSpace=[[UIBarButtonItem alloc] initWithCustomView:lblTime];
        
        btnSwitchCamera = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, ButtonWidthAndHeight, ButtonWidthAndHeight)];
        [btnSwitchCamera addTarget:self action:@selector(clickSwitchCameraBtn) forControlEvents:UIControlEventTouchUpInside];
        [btnSwitchCamera setHighlighted:YES];
        [btnSwitchCamera setBackgroundImage:[UIImage imageNamed:@"ShutDownCallImage-Normal"] forState:UIControlStateNormal];
        [btnSwitchCamera setBackgroundImage:[UIImage imageNamed:@"ShutDownCallImage-upsideInput"] forState:UIControlStateHighlighted];
        UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithCustomView:btnSwitchCamera];
        
        [self setItems:@[leftItem,centerSpace,rightItem]];
        
        currentIsShow = NO;
    }
    return self;
}

-(void)clickSwitchCameraBtn
{
    if ([_myDelegate respondsToSelector:@selector(switchCamera)]) {
        [_myDelegate switchCamera];
    }
}

-(BOOL)isShow
{
    return currentIsShow;
}

-(void)show
{
    [UIView animateWithDuration:AnimateDuration animations:^{
        [self setFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
    } completion:^(BOOL finished) {
        currentIsShow = YES;
    }];
}

-(void)hidden
{
    [UIView animateWithDuration:AnimateDuration animations:^{
        [self setFrame:CGRectMake(0, -self.frame.size.height, self.frame.size.width, self.frame.size.height)];
    } completion:^(BOOL finished) {
        currentIsShow = NO;
    }];
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
