//
//  PHCityHospitalAttentionTableViewController.m
//  PocketHealth
//
//  Created by YangFan on 15/1/21.
//  Copyright (c) 2015年 YiLiao. All rights reserved.
//

#import "PHCityHospitalAttentionTableViewController.h"
#import "PHCityHospitalAttentionTableViewCell.h"
#import "City.h"
#import "Organization.h"
#import "SFirendDB.h"
#import "Member.h"
#import "PHAppStartManager.h"

#import "UIImageView+WebCache.h"

#import "PHGroupHttpRequest.h"
#import "JSONKit.h"
#import "ClientHelper.h"

//子界面
#import "PHOrganizationDetailsViewController.h"
#import "MBProgressHUD.h"

@interface PHCityHospitalAttentionTableViewController ()<UISearchBarDelegate>
{
    City *selectCity;
    NSMutableArray *filterOrganizationList;
}
@property(nonatomic, strong) UISearchBar *searchBar;

@end


static NSString * identifierPHCityHospitalAttentionTableViewCell = @"identifierPHCityHospitalAttentionTableViewCell";
@implementation PHCityHospitalAttentionTableViewController

-(id)initWithCity:(City *)city
{
    self = [super init];
    if (self) {
        selectCity = city;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    _searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 44.0f)];
    [_searchBar setPlaceholder:@"搜索"];
    _searchBar.delegate = self;
    self.tableView.tableHeaderView = _searchBar;
    
    [self.tableView registerNib:[UINib nibWithNibName:@"PHCityHospitalAttentionTableViewCell" bundle:nil] forCellReuseIdentifier:identifierPHCityHospitalAttentionTableViewCell];
    
    [self initlizedFilterOrganizations];
    // Uncomment the following line to preserve selection between presentations.
    // self.clearsSelectionOnViewWillAppear = NO;
    
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma -mark searchBarDelegate
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    [self performSelector:@selector(filterOrganizaitonWithSearchText:) withObject:searchText];
}

- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
{
    [searchBar resignFirstResponder];
}
-(void)filterOrganizaitonWithSearchText:(NSString *)searchText
{
    if (filterOrganizationList == nil) {
        filterOrganizationList = [[NSMutableArray alloc] init];
    }else{
        [filterOrganizationList removeAllObjects];
    }
    
    if ((searchText == nil) || (searchText.length == 0)) {
        [filterOrganizationList addObjectsFromArray:selectCity.organizationList];
    }else{
        NSString *likeStr = [NSString stringWithFormat:@"*%@*",searchText];
        NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF.organizationName LIKE[cd] %@ OR SELF.organizationLevel LIKE[cd] %@",likeStr,likeStr];
        NSArray *array = [selectCity.organizationList filteredArrayUsingPredicate:predicate];
        if ((array == nil) || (array.count == 0)) {
            return;
        }
        [filterOrganizationList addObjectsFromArray:array];
    }
    [self.tableView reloadData];
}

#pragma mark - Table view data source
#pragma mark - tablview data soure create
-(void)initlizedFilterOrganizations
{
    if (filterOrganizationList == nil) {
        filterOrganizationList = [[NSMutableArray alloc] init];
    }else{
        [filterOrganizationList removeAllObjects];
    }
    if (selectCity.organizationList.count > 0) {
        [filterOrganizationList addObjectsFromArray:selectCity.organizationList];
    }
    //请求网络 获取我是否关注这个城市中的医院
    [PHGroupHttpRequest requestCityHospitalWithCityId:selectCity.cityId done:^(AFHTTPRequestOperation *operation, id responseObject) {
        //
        if ([CommonUtil isValidateHttpResponseObject:responseObject]) {
            [filterOrganizationList removeAllObjects];
            NSDictionary * resObject = (NSDictionary *)responseObject;
            NSArray * resultArray = [resObject objectForKey:@"Result"];
            for (NSDictionary * tmpORg in resultArray) {
                NSError *error = nil;
                Organization * getOrg = [MTLJSONAdapter modelOfClass:[Organization class] fromJSONDictionary:tmpORg error:&error];
                if (!error) {
                    [filterOrganizationList addObject:getOrg];
                }
            }
            [self.tableView reloadData];
        }
        
    } error:^(AFHTTPRequestOperation *operation, NSError *error) {
        //
    }];
    
}
//- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
//#warning Potentially incomplete method implementation.
//    // Return the number of sections.
//    return 3;
//}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    // Return the number of rows in the section.
    return filterOrganizationList.count;
}
#pragma -mark TableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPat
{
    return 75;
}
#pragma  mark - cell点击
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    Organization *org = [filterOrganizationList objectAtIndex:indexPath.row];
    PHOrganizationDetailsViewController * phOraganVC = [[PHOrganizationDetailsViewController alloc]initWithOrganization:org];
    [self.navigationController pushViewController:phOraganVC animated:YES];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    PHCityHospitalAttentionTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifierPHCityHospitalAttentionTableViewCell forIndexPath:indexPath];
    if (!cell) {
        NSLog(@"error");
    }
    Organization *org = [filterOrganizationList objectAtIndex:indexPath.row];
//    if ([org.organizationHeadImage isKindOfClass:[NSNull class]] || org.organizationHeadImage ==nil) {
//        
//    }else{
//        NSURL * orgHeadUrl = [NSURL URLWithString:org.organizationHeadImage];
//        [cell.imageViewHead sd_setImageWithURL:orgHeadUrl placeholderImage:[UIImage imageNamed:@"defult_hospital_icons"]];
//    }
    
    NSURL * orgHeadUrl = [NSURL URLWithString:org.organizationHeadImage];
    [cell.imageViewHead sd_setImageWithURL:orgHeadUrl placeholderImage:[UIImage imageNamed:@"defult_hospital_icons"]];
    
    cell.labelMainName.text = org.organizationName;
    cell.labelSecondLabel.text = org.organizationLevel;
    cell.labelDetailLabel.text = org.organizationAddress;
    
    cell.btnRightBtn.tag = indexPath.row;
    if (org.utuid>0) {
        [cell.btnRightBtn setTitle:@"已关注" forState:UIControlStateDisabled];
        [cell.btnRightBtn setEnabled:NO];

    }else{
        [cell.btnRightBtn setTitle:@"点击关注" forState:UIControlStateNormal];
        [cell.btnRightBtn addTarget:self action:@selector(attentionHospitalBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        
    }
    // Configure the cell...
    
    return cell;
}

-(void)attentionHospitalBtnClick:(id)sender{
    UIButton *clickBtn = (UIButton *)sender;
    NSLog(@"%u",clickBtn.tag);
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"确认添加" message:nil preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
    UIAlertAction *okAction = [UIAlertAction actionWithTitle:@"好的" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action) {
        Member * host = [[PHAppStartManager defaultManager]userHost];
        
        Organization *org = [filterOrganizationList objectAtIndex:clickBtn.tag];
        
        
        Member *member  = [Member initWithOrganization:org];
        //将该用户存入数据库
        SFirendDB * sfriendDB = [[SFirendDB alloc]init];
        if (![sfriendDB isExistMemberWithUid:member.memberId WithBelongUid:host.memberId]) {
            [sfriendDB saveUser:member WithBelongUid:host.memberId];
        }
        
        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        
        // Configure for text only and offset down
        hud.mode = MBProgressHUDModeIndeterminate;
        hud.margin = 10.f;
        hud.removeFromSuperViewOnHide = YES;
        
        //直接加好友
        [PHGroupHttpRequest requestAddAnFriend:member.memberId WithMemberType:0 done:^(AFHTTPRequestOperation *operation, id responseObject) {
            //
            NSDictionary *dic = (NSDictionary *)responseObject;
            NSString * message = [dic objectForKey:@"Message"];
            if (!message) {
                hud.labelText = message;
            }
            [hud hide:YES afterDelay:1];
            if ([CommonUtil isValidateHttpResponseObject:responseObject]) {
                //                    NSDictionary *dic = (NSDictionary *)responseObject;
                NSString * sendTag = [NSString stringWithFormat:@"%@请求添加%@为好友",host.nickName,member.nickName];
                //                    NSLog(@"%@",[dic objectForKey:@"Message"]);
                NSDictionary *userInfoData = [NSDictionary dictionaryWithObjectsAndKeys:host.headImage,@"HeadImg",host.loginName,@"LoginName",host.nickName,@"NickName",[NSString stringWithFormat:@"%lld",host.memberId],@"UserId",[NSString stringWithFormat:@"%u",host.userType],@"UserType", nil];
                NSDictionary * userInfo = [NSDictionary dictionaryWithObjectsAndKeys:userInfoData,@"Data",@"1",@"Code",sendTag,@"Message", nil];
                NSString *userInfoStr = [userInfo JSONString];
                NSInteger ret =  [ClientHelper addFriend:host.memberId Token:[CommonUtil MyToken] ToUid:member.memberId UserInfo:userInfoStr Msgsn:99999];
                
                
                
                NSLog(@"addFriend %ld",(long)ret);
                
            }else{
                NSLog(@"帐号错误 一般不会打印");
            }
            
            
        } error:^(AFHTTPRequestOperation *operation, NSError *error) {
            //
            hud.labelText = @"网络错误";
            [hud hide:YES afterDelay:1];
        }];

    }];
    [alertController addAction:cancelAction];
    [alertController addAction:okAction];
    [self presentViewController:alertController animated:YES completion:nil];
    
    
}
/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/

/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
    } else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}
*/

/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath {
}
*/

/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
#pragma -mark scrollViewDelegate
- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView
{
    if (_searchBar.isFirstResponder) {
        [_searchBar resignFirstResponder];
    }
}
@end
