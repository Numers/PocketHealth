//
//  PHLocationHelper.m
//  PocketHealth
//
//  Created by macmini on 15-1-16.
//  Copyright (c) 2015年 YiLiao. All rights reserved.
//

#import "PHLocationHelper.h"
#import "GlobalVar.h"
#import "PHAppStartManager.h"
#import "PHUpdateUserInfoManager.h"
#import "PHWeathManager.h"
static PHLocationHelper *phLocationHelper;
@implementation PHLocationHelper
+(id)defaultHelper
{
    if (phLocationHelper == nil) {
        phLocationHelper = [[PHLocationHelper alloc] init];
    }
    return phLocationHelper;
}

-(void)startLocation
{
    locationManager = [[CLLocationManager alloc] init];
    locationManager.delegate = self;
    locationManager.desiredAccuracy = kCLLocationAccuracyBest;
    locationManager.distanceFilter = 1000.0f;
    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= IOS_8_0)
    {
        [locationManager requestAlwaysAuthorization];
    }
    [locationManager startUpdatingLocation];
}

-(void)uploadMyLocationInfo
{
    [self startLocation];
}

-(void)sendMyLocation:(NSString *)location
{
    [[PHUpdateUserInfoManager defaultManager] updateUserInfoWithParameter:location WithProperty:@"Userlocation" CallDoneBack:^(AFHTTPRequestOperation *operation, id responseObject) {
    } CallErrorBack:^(AFHTTPRequestOperation *operation, NSError *error) {
        
    }];
}

-(void)getWeathInfoWithLat:(float)lat WithLng:(float)lng
{
    NSString *latAndLng = [NSString stringWithFormat:@"%f:%f",lat,lng];
    [[PHWeathManager defaultManager] requestWeathInfo:latAndLng CallDoneBack:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSDictionary *dic = (NSDictionary *)responseObject;
        NSInteger code = [[dic objectForKey:@"Code"] integerValue];
        if (code == 1) {
            NSDictionary *resultDic = [dic objectForKey:@"Result"];
            mood = [[resultDic objectForKey:@"MoodNumber"] floatValue];
            pmValue = [[resultDic objectForKey:@"Pm25"] floatValue];
            uv = [resultDic objectForKey:@"Uv"];
            temperature = [resultDic objectForKey:@"Temperature"];
        }
    } CallErrorBack:^(AFHTTPRequestOperation *operation, NSError *error) {
        
    }];
}

-(float)returnSuggestPMValue
{
    return pmValue;
}

-(float)returnSuggestMoodNumber
{
    return mood;
}

-(NSString *)returnSuggestUV
{
    return uv;
}

-(NSString *)returnSuggestTemperature
{
    return temperature;
}
#pragma -mark CLLocaitonManagerDelegate
-(void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations
{
    CLLocation *location = [locations lastObject];
    if (location.horizontalAccuracy == -1) {
        [self startLocation];
    }else{
        NSLog(@"%.2f,%.2f",location.coordinate.latitude,location.coordinate.longitude);
        [manager stopUpdatingLocation];
        [self getWeathInfoWithLat:location.coordinate.latitude WithLng:location.coordinate.longitude];
                CLGeocoder *geocoder = [[CLGeocoder alloc] init];
                [geocoder reverseGeocodeLocation:location completionHandler:^(NSArray *array, NSError *error) {
                    if (array.count > 0) {
                        CLPlacemark *placemark = [array objectAtIndex:0];
                        NSString *currentCity = [placemark.locality stringByReplacingOccurrencesOfString:@"市" withString:@""];
//                        NSString *state = placemark.administrativeArea;
//                        NSString *area = placemark.subLocality;
                        Member *host = [[PHAppStartManager defaultManager] userHost];
                        host.location = [NSString stringWithFormat:@"%@",currentCity];
                        [[PHAppStartManager defaultManager] setHostMember:host];
                        [self sendMyLocation:host.location];
                    }
                }];
    }
}

- (void)locationManager:(CLLocationManager *)manager
       didFailWithError:(NSError *)error
{
    if ([error code] == kCLErrorDenied)
    {
        //访问被拒绝
    }
    if ([error code] == kCLErrorLocationUnknown) {
        //无法获取位置信息
    }
    [manager stopUpdatingLocation];
}
@end
