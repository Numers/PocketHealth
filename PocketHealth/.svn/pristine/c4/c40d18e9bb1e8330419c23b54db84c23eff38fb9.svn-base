//
//  PHProgressView.m
//  Progress
//
//  Created by macmini on 15-1-22.
//  Copyright (c) 2015年 YiLiao. All rights reserved.
//

#import "PHProgressView.h"
#import "CCProgressView.h"
#import "CommonUtil.h"
#define ProgressInterval 0.1
#define TimeDuration 0.003f
#define LabelHeight 30.0f

static CGFloat currentProgress;
@implementation PHProgressView
-(id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        self.userInteractionEnabled = YES;
        self.backgroundColor = [UIColor clearColor];
        currentProgress = 0.f;
        ccProgressView = [[CCProgressView alloc] initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
        [self addSubview:ccProgressView];
        
        scoreLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, frame.size.height/2  - LabelHeight, frame.size.width, LabelHeight)];
        [scoreLabel setTextColor:[UIColor greenColor]];
        [scoreLabel setTextAlignment:NSTextAlignmentCenter];
        [scoreLabel setFont:[UIFont systemFontOfSize:40]];
        [self addSubview:scoreLabel];
        
        detailsLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, frame.size.height/2 + LabelHeight, frame.size.width, LabelHeight)];
        [detailsLabel setTextColor:[UIColor whiteColor]];
        [detailsLabel setTextAlignment:NSTextAlignmentCenter];
        [detailsLabel setFont:[UIFont systemFontOfSize:20]];
        [self addSubview:detailsLabel];
    }
    return self;
}

- (void)setProgress:(CGFloat)progress animated:(BOOL)animated
{
    [detailsLabel setHidden:YES];
    if (progress > 0) {
        score = progress;
    }else{
        score = 0.05;
    }
    NSMutableDictionary *userInfo = [NSMutableDictionary dictionaryWithObject:[NSNumber numberWithBool:animated] forKey:@"Animate"];
    
    inilizedOver = NO;
    NSTimer *timer = [NSTimer scheduledTimerWithTimeInterval:TimeDuration target:self selector:@selector(startUpdate:) userInfo:userInfo repeats:YES];
    [timer fire];
}

-(void)startUpdate:(NSTimer *)timer
{
    if (!inilizedOver) {
        if (currentProgress > 0.05) {
            [scoreLabel setText:[NSString stringWithFormat:@"%.0lf分",currentProgress]];
            BOOL animate = [[[timer userInfo] objectForKey:@"Animate"] boolValue];
            [ccProgressView setCurrentWaterColor:[self waterColorWithProgress:currentProgress]];
            [ccProgressView setProgress:currentProgress/100.0f animated:animate];
            currentProgress = currentProgress - ProgressInterval;
            return;
        }else{
            inilizedOver = YES;
        }
    }
    
    if (currentProgress >= score) {
        [detailsLabel setText:[self getHealthState]];
        [detailsLabel setHidden:NO];
        [timer invalidate];
        timer = nil;
        return;
    }
    [scoreLabel setText:[NSString stringWithFormat:@"%.0lf分",currentProgress]];
    BOOL animate = [[[timer userInfo] objectForKey:@"Animate"] boolValue];
    [ccProgressView setCurrentWaterColor:[self waterColorWithProgress:currentProgress]];
    [ccProgressView setProgress:currentProgress/100.0f animated:animate];
    currentProgress = currentProgress + ProgressInterval;
}

void HSVtoRGB(float *r, float *g, float *b, float h, float s, float v)
{
    int i;
    float f, p, q, t;
    if( s == 0 ) {
        // achromatic (grey)
        *r = *g = *b = v;
        return;
    }
    h /= 60;            // sector 0 to 5
    i = floor( h );
    f = h - i;          // factorial part of h
    p = v * ( 1 - s );
    q = v * ( 1 - s * f );
    t = v * ( 1 - s * ( 1 - f ) );
    switch( i ) {
        case 0:
            *r = v;
            *g = t;
            *b = p;
            break;
        case 1:
            *r = q;
            *g = v;
            *b = p;
            break;
        case 2:
            *r = p;
            *g = v;
            *b = t;
            break;
        case 3:
            *r = p;
            *g = q;
            *b = v;
            break;
        case 4:
            *r = t;
            *g = p;
            *b = v;
            break;
        default:        // case 5:
            *r = v;
            *g = p;
            *b = q;
            break;
    }
}

-(UIColor *)waterColorWithProgress:(float)progress
{
    float fs = progress/100;
    float r,g,b,h,s,v;
    h = 160*fs - 40.f;
    s = 0.85;
    v = 0.85;
    HSVtoRGB(&r, &g, &b, h, s, v);
    
    UIColor *color = [UIColor colorWithRed:r green:g blue:b alpha:1.f];
    return color;
}

-(NSString *)getHealthState
{
    if (score < 80) {
        return @"亚健康状态";
    }
    
    if (score < 90) {
        return @"身体健康";
    }
    
    if (score < 100) {
        return @"身体很健康";
    }
    return nil;
}

// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}

@end
