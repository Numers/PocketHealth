//
//  PHOrganizationSelectViewController.m
//  PocketHealth
//
//  Created by macmini on 15-1-9.
//  Copyright (c) 2015年 YiLiao. All rights reserved.
//

#import "PHOrganizationSelectViewController.h"
#import "CalculateViewFrame.h"
#import "ChineseInclude.h"
#import "PinYinForObjc.h"
#import "PHOrganizationManager.h"
#import "City.h"
#import "Organization.h"

static NSString *cellIdentify = @"OrganizationCell";
@interface PHOrganizationSelectViewController ()<UITableViewDelegate,UITableViewDataSource,UIScrollViewDelegate>
{
    NSMutableArray *sectionRows;
    NSMutableArray *sections;
    NSMutableArray *cityList;
    Organization *gpsOrganization;
}
@property(nonatomic, strong) UITableView *tableView;
@property(nonatomic, strong) UISearchBar *searchBar;
@end

@implementation PHOrganizationSelectViewController

-(id)initWithGpsOrganization:(Organization *)gOrganization;
{
    self = [super init];
    if (self) {
        gpsOrganization = gOrganization;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    _searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 44.0f)];
    [_searchBar setPlaceholder:@"输入城市名或首字母查询"];
    [self.view addSubview:_searchBar];
    CGRect frame = [CalculateViewFrame viewFrame:self.navigationController withTabBarController:self.tabBarController];
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(frame.origin.x, frame.origin.y + _searchBar.frame.size.height, frame.size.width, frame.size.height - _searchBar.frame.size.height)];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    [self.view addSubview:_tableView];
}

-(void)initlizedSectionsAndSectionRows
{
    if ((cityList == nil) || (cityList.count == 0)) {
        return;
    }
    
    if (sections == nil) {
        sections = [[NSMutableArray alloc] init];
    }else{
        [sections removeAllObjects];
    }
    
    if (sectionRows == nil) {
        sectionRows = [[NSMutableArray alloc] init];
    }else{
        [sectionRows removeAllObjects];
    }
    
    //处理城市列表
    [self dowithCityList];
    //添加热门城市
    [sections addObject:@"热门城市"];
    NSString *path = [[NSBundle mainBundle] pathForResource:@"HotCity" ofType:@"plist"];
    NSArray *hotCityIdList = [NSArray arrayWithContentsOfFile:path];
    if ((hotCityIdList != nil) && (hotCityIdList.count > 0)) {
        NSMutableArray *hotCityList = [[NSMutableArray alloc] init];
        for (NSNumber *m in hotCityIdList) {
            City *city = [self searchCityWithCityId:[m integerValue]];
            if (city != nil) {
                [hotCityList addObject:city];
            }
        }
        [sectionRows insertObject:hotCityList atIndex:0];
    }
    //添加定位城市
    NSArray *gpsCityList = nil;
    if (gpsOrganization == nil) {
        gpsCityList = [[NSArray alloc] init];
    }else{
        City *gpsCity = [self searchCityWithCityId:gpsOrganization.organizationAreaId];
        gpsCityList = [NSArray arrayWithObject:gpsCity];
    }
    [sectionRows insertObject:gpsCityList atIndex:0];
    //刷新tableview
    [_tableView reloadData];
}

-(void)dowithCityList
{
    for (City *m in cityList) {
        NSString *character = [[m.initials substringToIndex:1] uppercaseString];
        [self addDifferentCharacterIntoSectionsArray:character];
    }
    
    [sections sortUsingComparator:^NSComparisonResult(id obj1, id obj2) {
        return [obj1 compare:obj2 options:NSNumericSearch|NSCaseInsensitiveSearch];
    }];
    
    for (NSString *head in sections) {
        NSString *likeStr = [NSString stringWithFormat:@"%@*",head];
        NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF.initials like[cd] %@",likeStr];
        NSArray *filterArr = [cityList filteredArrayUsingPredicate:predicate];
        
        NSMutableArray *sectionRowsMember = [[NSMutableArray alloc] initWithCapacity:filterArr.count];
        for (City *c in filterArr) {
            [sectionRowsMember addObject:c];
        }
        if (sectionRowsMember.count > 0) {
            [sectionRows addObject:sectionRowsMember];
        }
    }
}

-(void)addDifferentCharacterIntoSectionsArray:(NSString *)character
{
    if (character) {
        if (![sections containsObject:character]) {
            [sections addObject:character];
        }
    }
}

-(City *)searchCityWithCityId:(NSInteger)cityId
{
    City *city = nil;
    NSPredicate *predicate = [NSPredicate predicateWithFormat:@"SELF.cityId = %ld",cityId];
    NSArray *array = [cityList filteredArrayUsingPredicate:predicate];
    
    if ((array != nil) && (array.count > 0)) {
        city = [array lastObject];
    }
    return city;
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self navigationControllerSetting];
    [self requestOrganizationList];
}

-(void)navigationControllerSetting
{
    [self.navigationItem setTitle:@"医院名录"];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)requestOrganizationList
{
    [[PHOrganizationManager defaultManager] requestOrganizetionListCallDoneBack:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSLog(@"%@",responseObject);
        NSDictionary *dic = (NSDictionary *)responseObject;
        NSInteger code = [[dic objectForKey:@"Code"] integerValue];
        if (code == 1) {
            cityList = [[NSMutableArray alloc] init];
            NSArray *resultArr = [dic objectForKey:@"Result"];
            for (NSDictionary *cityDic in resultArr) {
                City *city = [[City alloc] initWithDictionary:cityDic];
                [cityList addObject:city];
            }
            [self initlizedSectionsAndSectionRows];
        }else{
            
        }
    } CallErrorBack:^(AFHTTPRequestOperation *operation, NSError *error) {
        
    }];
}


#pragma -mark TableViewDelegate
//- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPat
//{
//    return 44.0f;
//}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1+sections.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSArray *sectionMemberArr = [sectionRows objectAtIndex:section];
    NSInteger result = sectionMemberArr.count;
    return result;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentify];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentify];
    }
    
    NSArray *sectionRowsMember = [sectionRows objectAtIndex:indexPath.section];
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        @autoreleasepool {
            //Data processing
            City *city = (City *)[sectionRowsMember objectAtIndex:indexPath.row];
            dispatch_async(dispatch_get_main_queue(), ^{
                //Update Interface
                [cell.textLabel setText:city.cityName];
            });
        }
    });
    return cell;
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    NSString *result = nil;
    if (section == 0) {
        result = nil;
    }else{
        result = [sections objectAtIndex:section-1];
    }
    return result;
}

#pragma -mark scrollViewDelegate
-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    if ([_searchBar becomeFirstResponder]) {
        [_searchBar resignFirstResponder];
    }
}
@end
