//
//  PHMonitoringViewController.m
//  PocketHealth
//
//  Created by macmini on 15-1-6.
//  Copyright (c) 2015å¹´ YiLiao. All rights reserved.
//

#import "PHMonitoringViewController.h"
#import "PHAppStartManager.h"
#import "PHLoginManager.h"
#import "PHCheckViewController.h"
#import "CommonUtil.h"
#import "CalculateViewFrame.h"

@interface PHMonitoringViewController ()<UIScrollViewDelegate>
{
    Member *host;
    UIScrollView *scrollView;
}

@end

@implementation PHMonitoringViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    scrollView = [[UIScrollView alloc] init];
    scrollView.delegate = self;
//    [self.view addSubview:scrollView];
    PHCheckViewController *phCheckVC = [[PHCheckViewController alloc] init];
//    [phCheckVC.view setFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 300)];
//    NSLog(@"%lf,%lf",phCheckVC.view.frame.size.width,phCheckVC.view.frame.size.height);
//    [scrollView addSubview:phCheckVC.view];
//    [scrollView setContentSize:CGSizeMake([UIScreen mainScreen].bounds.size.width, phCheckVC.view.frame.size.height+10)];
    [self.view addSubview:phCheckVC.view];
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:NO];
    [self.navigationController.navigationBar setTranslucent:NO];
    CGRect frame = [CalculateViewFrame viewFrame:self.navigationController withTabBarController:self.tabBarController];
    [scrollView setFrame:frame];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

//-(void)autoLogin
//{
//    [[PHLoginManager defaultManager] loginWithLoginName:@"13890909090" WithPassword:@"123456" WithChanneid:@"aaa" WithBuserid:@"bbb" WithDeviceType:Device_IOS CallDoneBack:^(AFHTTPRequestOperation *operation, id responseObject) {
//        NSDictionary *dic = (NSDictionary *)responseObject;
//        NSInteger code = [[dic objectForKey:@"Code"] integerValue];
//        if (code == 1) {
//            NSError *error = nil;
//            host = [MTLJSONAdapter modelOfClass:[Member class] fromJSONDictionary:[dic objectForKey:@"Result"] error:&error];
//            if (!error) {
//                [[PHAppStartManager defaultManager] setHostMember:host];
//                 AFNetWorkKey = [CommonUtil createSendKeyWithUserName:host.loginName Userid:[NSString stringWithFormat:@"%lld",host.memberId]];
//            }
//        }else{
//            [[PHAppStartManager defaultManager] loginOut];
//        }
//        [[PHAppStartManager defaultManager] loginOut];
//    } CallErrorBack:^(AFHTTPRequestOperation *operation, NSError *error) {
//        [[PHAppStartManager defaultManager] loginOut];
//    }];
//
//}

@end
